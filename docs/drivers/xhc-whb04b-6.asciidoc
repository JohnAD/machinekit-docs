---
---

:skip-front-matter:

= xhc-whb04b-6
:toc:
[[cha:xhcwhb04b6-driver]] (((XHC WHB04B-6 Pendant)))

== NAME
*xhc-whb04b-6* - User-space jog dial HAL component for the wireless XHC-WHB04B-6 device.

== SYNOPSIS
xhc-whb04b-6 [-h] | [-H] [OPTIONS]

== DESCRIPTION
The xhc-whb04b-6 component supports a 6-axis wireless USB pendant that provides a number of pushbuttons, a manual pulse generator (mpg or jog wheel), and a selector switch for the wheel.

In addition to buttons, the pendant provides an LCD display indicating the activated axis,
current axis position (machine or relative), step size, step mode (MPG, STP, CONT),
feed rate, spindle speed (RPM), machine state (reset), battery level and wireless signal strength.

The pendant display, its rotary selector switch, and the component pin names use designators x,y,z,a,b,c.
While this arrangement presumes a machine configured as XYZABC, the pins can be assigned independently as required in a HAL configuration.

== OPTIONS
[cols="5%,90%",frame="none", grid="none",]
|===
| *-h* |
Prints the synopsis and the most commonly used commands.

| *-H* |
run xhc-whb04b-6 in HAL-mode instead of interactive mode.
When in HAL mode commands from device will be exposed to HAL's shred memory.
Interactive mode is useful for testing device connectivity and debugging.

| *-t* |
Wait with timeout for USB device then proceed, exit otherwise.
Without -t the timeout is implicitly infinite.

| *-u, -U* |
Show received data from device. With -U received and transmitted data will be printed.
Output is prefixed with "usb".

| *-p* |
Show HAL pins and HAL related messages. Output is prefixed with "hal".

| *-e* |
Show captured events such as button pressed/released, jog dial, axis rotary button, and feed rotary button event.
Output is prefixed with "event".

| *-a* |
Enable all logging facilities without explicitly specifying each.

| *-c* |
Enable checksum output which is necessary for debugging the checksum generator function.
Do not rely on this feature since it will be removed once the generator is implemented.

| *-n* |
Force being silent and not printing any output except of errors.
This will also inhibit messages prefixed with "init".
|===

== UDEV
The xhc-whb04b-6 executable needs permission for reading the pendant's USB device.
There may be the need for additional udev rules.
If so, this file +
`/etc/udev/rules.d/99-xhc-whb04b-6.rules` +
should be created with the single line +
`ATTR{idProduct}=="eb93", ATTR{idVendor}=="10ce", MODE="0666", OWNER="root", GROUP="plugdev"`.

== Standalone Usage
The xhc-whb04b-6 program can be run from the command line without LinuxCNC to test a pendant.
This standalone mode is used to identify the button codes produced for each button press and debug transmitted USB data. 

=== EXAMPLES
[cols="20%,90%",frame="none", grid="none",]
|===
| *xhc-whb04b-6 -ue* |
Start in userspace mode (simulation) and prints incoming USB data transfer and generated key pressed/released events.

| *xhc-whb04b-6 -p* |
Start in userspace mode (simulation) and prints HAL pin names and events distributed to HAL memory.

| *xhc-whb04b-6 -Ha* |
Start in HAL mode and avoid output, except of errors.
|===

== Hal Usage
Use the -H option to specify HAL mode and other options as required: +
*loadusr -W xhc-whb04b-6 -H*

=== Input/Output Pins
*Note:* For each button an output pin is provided even if no functionality is realized with that signal.
For example, to stop a running program the Stop button pin may be directly connected to halui.program.stop.
However, to start/pause/resume a program, the corresponding button toggles besides whb.button.start-pause
also the whb.halui.program.{run,pause,resume} signals accordingly. +
*Note:* The Spindle+/Spindle- buttons do manipulate the spindle override.
The spindle speed is set with the respective combos Fn + Spindle- and FN + Spindle+.

The following table lists all in-/output pins and state which signals they are meant to be connected to. +
*<N>*  ... denotes the axis number, which is of {0, 1, 2, 3, 4, 5} +
*<NN>* ... denotes an arbitrary macro number


[cols="30%,5%,5%,60%",options="header"]
|====
| Component Signal Name                 | Type | In/Out | Notes
| *whb.axis.<N>.jog-counts*             | bit  | out    | connect to axis.<N>.jog-counts +
                                          The count pin of the jog wheel.
| *whb.axis.<N>.jog-scale*              | bit  | out    | connect to axis.<N>.jog-scale +
                                          The distance to move for each count on "jog-counts", in machine units.
| *whb.axis.<N>.jog-jog-vel-mode*       | bit  | out    | connect to axis.<N>.jog-jog-vel-mode +
                                          If false the jogwheel operates in position mode.
                                          The axis will move exactly jog-scale units for each count,
                                          regardless of how long that might take.
                                          If true, the jogwheel operates in velocity mode - motion stops when the wheel stops,
                                          even if that means the commanded motion is not completed.
| *whb.axis.<N>.jog-enable*             | bit  | out    | connect to axis.<N>.jog-enable +
                                          If true (and in manual mode), any change to "jog-counts" will result in motion.
                                          If false, "jog-counts" is ignored.
| *whb.stepgen.<N>.maxvel*              | bit  | in     | connect to stepgen.<N>.maxvel +
                                          The maximum allowable velocity, in units per second (*<N>* is two digit 0-padded).
| *whb.stepgen.<N>.position-scale*      | bit  | in     | connect to stepgen.<N>.position-scale +
                                          The scaling for position feedback, position command, and velocity command, in steps per length unit (*<N>* is two digit 0-padded).                    
| *whb.halui.estop.activate*            | bit  | out    | connect to halui.estop.activate +
                                          Pin for requesting estop.
| *whb.halui.estop.is-activated*        | bit  | in     | connect to halui.estop.is-activated +
                                          Pin for indicating E-Stop
| *whb.halui.estop.reset*               | bit  | out    | connect to halui.estop.reset +
                                          Pin for requesting E-Stop reset.
| *whb.halui.machine.on*                | bit  | out    | connect to halui.machine.on +
                                          Pin for requesting machine on.
| *whb.halui.machine.off*               | bit  | out    | connect to halui.machine.off +
                                          Pin for requesting machine off.
| *whb.halui.machine.is-on*             | bit  | in     | connect to halui.machine.is-on +
                                          Pin that indicates machine is on.
| *whb.halui.spindle.is-on*             | bit  | in     | connect to halui.spindle.is-on +
                                          Pin to indicate spindle is on (either direction).
| *whb.halui.spindle.start*             | bit  | out    | connect to halui.spindle.start +
                                          Pin to start the spindle.
| *whb.halui.spindle.stop*              | bit  | out    | connect to halui.spindle.stop +
                                          Pin to stop the spindle.
| *whb.halui.spindle.decrease*          | bit  | out    | connect to halui.spindle.decrease +
                                          Pin to decrease the spindle speed.
| *whb.halui.spindle.increase*          | bit  | out    | connect to halui.spindle.increase +
                                          Pin to increase the spindle speed.
| *whb.halui.spindle-override.increase* | bit  | out    | connect to halui.spindle-override.increase +
                                          Pin for increasing the spindle override by the amount of scale.
| *whb.halui.spindle-override.decrease* | bit  | out    | connect to halui.spindle-override.decrease +
                                          Pin for decreasing the spindle override by the amount of scale.
| *whb.halui.spindle-override.value*    | bit  | in     | connect to halui.spindle-override.value +
                                          The current spindle override value.
| *whb.halui.feed-override.value*       | bit  | in     | connect to halui.feed-override.value +
                                          The current feed override value.
| *whb.halui.feed-override.decrease*    | bit  | out    | connect to halui.feed-override.decrease +
                                          Pin for decreasing the feed override by amount of scale.
| *whb.halui.feed-override.increae*     | bit  | out    | connect to halui.feed-override.increase +
                                          Pin for increasing the feed override by amount of scale.
| *whb.halui.home-all*                  | bit  | out    | connect to halui.home-all, driven by macro-10 +
                                          Pin for requesting all axis to home.
| *whb.halui.joint.<N>.select*          | bit  | out    | connect to halui.joint.<N>.select +
                                          Pin to select joint.
| *whb.halui.program.run*               | bit  | out    | connect to halui.program.run +
                                          Pin for running a program.
| *whb.halui.program.is-running*        | bit  | in     | connect to halui.program.is-running +
                                          Pin indicating a program is running.
| *whb.halui.program.pause*             | bit  | out    | connect to halui.program.pause
                                          Pin for pausing a program.
| *whb.halui.program.is-paused*         | bit  | in     | connect to halui.program.is-paused +
                                          Pin indicating a program is pausing.
| *whb.halui.program.resume*            | bit  | out    | connect to halui.program.resume +
                                          Pin for resuming a program.
| *whb.halui.program.stop*              | bit  | out    | connect to program.stop +
                                          Pin for stoping a program.
| *whb.halui.program.is-idle*           | bit  | in     | connect to halui.program.is-idle +
                                          Pin indicating no program is running.
| *whb.halui.mode.auto*                 | bit  | out    | connect to halui.mode.auto +
                                          Pin for requesting auto mode.
| *whb.halui.mode.is-auto*              | bit  | in     | connect to halui.mode.is-auto +
                                          Pin for indicating auto mode is on.
| *whb.halui.mode.joint*                | bit  | out    | connect to halui.mode.joint +
                                          Pin for requesting joint by joint mode.
| *whb.halui.mode.is-joint*             | bit  | in     | connect to halui.mode.is-joint +
                                          Pin indicating joint by joint mode is on.
| *whb.halui.mode.manual*               | bit  | out    | connect to halui.mode.manual +
                                          Pin for requesting manual mode.
| *whb.halui.mode.is-manual*            | bit  | in     | connect to halui.mode.is-manual +
                                          Pin indicating manual mode is on.
| *whb.halui.mode.mdi*                  | bit  | out    | connect to halui.mode.mdi +
                                          Pin for requesting MDI mode.
| *whb.halui.mode.is-mdi*               | bit  | in     | connect to halui.mode.is-mdi +
                                          Pin indicating MDI mode is on.
| *whb.button.reset*                    | bit  | out    | see *whb.halui.estop.{activate, reset}* +
                                          True one Reset button down, false otherwise.
                                          For toggling E-stop use whb.halui.estop .active and .reset.
| *whb.button.stop*                     | bit  | out    | see *whb.halui.program.stop* +
                                          True on Stop button down, false otherwise.
                                          For stopping a program use whb.halui.program.stop.
| *whb.button.start-pause*              | bit  | out    | see *whb.halui.program.{run, pause, resume}* +                  
                                          True on Start-Pause button down, false otherwise.
                                          For toggling start-pause use whb.halui.program .run, .pause, and .resume.
| *whb.button.feed-plus*                | bit  | out    |
                                          True on Feed+ button down, false otherwise.
| *whb.button.feed-minus*               | bit  | out    |
                                          True on Feed- button down, false otherwise.
| *whb.button.spindle-plus*             | bit  | out    | see *whb.halui.spindle-override.increase* +
                                          True on Spindle+ button down, false otherwise.
                                          This button is meant to manipulate the spindle override.
                                          For increasing the spindle override use whb.halui.spindle-override.increase.
| *whb.button.spindle-minus*            | bit  | out    | see *whb.halui.spindle-override.decrease* +
                                          True on Spindle- button down, false otherwise.
                                          This button is meant to manipulate the spindle override.
                                          For decreaseing the spindle override use whb.halui.spindle-override.decrease.
| *whb.button.m-home*                   | bit  | out    | connect to halui.mdi-command-NN +
                                          True on M-Home button down, false otherwise.
| *whb.button.safe-z*                   | bit  | out    | connect to halui.mdi-command-<NN> +
                                          True on Safe-Z button down, false otherwise.
| *whb.button.w-home*                   | bit  | out    | connect to halui.mdi-command-<NN> +
                                          True on W-Home button down, false otherwise.
                                          Usually requests going to machine home instead of homing all.
| *whb.button.s-on-off*                 | bit  | out    | see *whb.halui.spindle.{start, stop}* +
                                          True on S-ON/OFF button down, false otherwise.
                                          For toggling spindle on-off use whb.halui.spindle .start and stop.
| *whb.button.fn*                       | bit  | out    |
                                          True on Fn button down, false otherwise.
| *whb.button.probe-z*                  | bit  | out    | connect to halui.mdi-command-<NN> +                            
                                          True on Probe-Z button down, false otherwise.
| *whb.button.macro-1*                  | bit  | out    | connect to halui.mdi-command-<NN> +
                                          True on Macro-1 button (Fn + Feed+) down, false otherwise.
| *whb.button.macro-2*                  | bit  | out    | connect to halui.mdi-command-<NN> +
                                          True on Macro-2 button (Fn + Feed-) down, false otherwise.
| *whb.button.macro-3*                  | bit  | out    | see *whb.halui.spindle.increase* +
                                          True on Macro-3 button (Fn + Spindle+) down, false otherwise.
                                          This button is meant to manipulate the spindle speed.
                                          For decreaseing the spindle speed use whb.halui.spindle.increase.
| *whb.button.macro-4*                  | bit  | out    | see *whb.halui.spindle.decrease* +
                                          True on Macro-4 button down (Fn + Spindle-), false otherwise.
                                          This button is meant to manipulate the spindle speed.
                                          For decreaseing the spindle speed use whb.halui.spindle.decrease.
| *whb.button.macro-5*                  | bit  | out    | connect to halui.mdi-command-<NN> +
                                          True on Macro-5 button down (Fn + M-HOME), false otherwise.
                                          Usually requests homing all instead of going to machine home.
| *whb.button.macro-6*                  | bit  | out    | connect to halui.mdi-command-<NN> +
                                          True on Macro-6 button down (Fn + Safe-Z), false otherwise.
| *whb.button.macro-7*                  | bit  | out    | connect to halui.mdi-command-<NN> +
                                          True on Macro-7 button down (Fn + W-HOME), false otherwise.
| *whb.button.macro-8*                  | bit  | out    | connect to halui.mdi-command-<NN> +
                                          True on Macro-8 button down (Fn + S-ON/OFF), false otherwise.
| *whb.button.macro-9*                  | bit  | out    | connect to halui.mdi-command-<NN> +
                                          True on Macro-9 button down (Fn + Probe-Z), false otherwise.
| *whb.button.macro-10*                 | bit  | out    | connect to halui.mdi-command-<NN> +
                                          True on Macro-10 button down, false otherwise.
| *whb.button.macro-11*                 | bit  | out    | connect to halui.mdi-command-<NN> +
                                          True on Macro-11 button down (Fn + RESET), false otherwise.
| *whb.button.macro-12*                 | bit  | out    | connect to halui.mdi-command-<NN> +
                                          True on Macro-12 button (Fn + Stop) down, false otherwise.
| *whb.button.macro-13*                 | bit  | out    | connect to halui.mdi-command-<NN> +
                                          True on Macro-13 button (Fn + Start/Pause) down, false otherwise.
| *whb.button.macro-14*                 | bit  | out    | connect to halui.mdi-command-<NN> +
                                          True on Macro-14 button (Fn + Macro-10) down, false otherwise.
| *whb.button.macro-15*                 | bit  | out    | connect to halui.mdi-command-<NN> +
                                          True on Macro-15 button down (Fn + MPG), false otherwise.
| *whb.button.macro-16*                 | bit  | out    | connect to halui.mdi-command-<NN> +
                                          True on Macro-16 button (Fn + Step\|Continuous) down, false otherwise.
| *whb.button.mode-continuous*          | bit  | out    |
                                          True on MPG mode button down, false otherwise.
| *whb.button.mode-step*                | bit  | out    |
                                          True on Step\|Continuous mode button down, false otherwise.
| *whb.pendant.is-sleeping*             | bit  | out    | True as long pendant is in sleep mode (usually a few seconds after turned off), false otherwise.
| *whb.pendant.is-connected*            | bit  | out    | True as long pendant is not in sleep mode (turned on), false otherwise.
|====

== SEE ALSO 
xhc-hb04.1(1), https://github.com/machinekit/machinekit/tree/master/src/hal/user_comps/xhc-whb04b-6/[xhc-whb04b-6 developer documentation on Github]

== NOTES
The CRC code function is not disclosed by the manufacturer.
Ths the CRC value transmitted with each package is not checked yet.
Feel free to help us enhance the component.
    
== AUTHORS
This component was started by Raoul Rubien (https://github.com/rubienr) based on predecessor device's component xhc-hb04.cc.
https://github.com/machinekit/machinekit/graphs/contributors gives you a more complete list of contributors.
    
== REPORTING BUGS
Report bugs via the machinekit forum at https://groups.google.com/forum/#!forum/machinekit

== HISTORY
The component was developed accidentally as leisure project.
The development started with the xhc-whb04 (4-axis wireless pendant) implementation as reference.
73 & many thanks to the developers who delivered provided an excellent preparatory work!

== COPYRIGHT
Copyright (c) 2018 Raoul Rubien.
This is free software; see the source for copying conditions. There is NO
warranty; not even for MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.
